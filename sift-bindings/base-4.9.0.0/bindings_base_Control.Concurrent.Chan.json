[{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$tcChan"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TyCon"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$trModule"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TrNameS"}]}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$tc'Chan"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TyCon"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$trModule"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TrNameS"}]}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$tcChItem"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TyCon"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$trModule"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TrNameS"}]}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$tc'ChItem"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TyCon"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$trModule"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TrNameS"}]}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$trModule"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "Module"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TrNameS"}]}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "isEmptyChan"}
,"refs": [{"package": "base"
,"module": "Control.Concurrent.MVar"
,"name": "withMVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "readVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "readMVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "writeVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "r"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "w"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "eq"}
,{"package": "ghc-prim"
,"module": "GHC.Prim"
,"name": "seq"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 145
,"start-col": 1
,"end-line": 149
,"end-col": 24}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "unGetChan"}
,"refs": [{"package": "base"
,"module": "GHC.MVar"
,"name": "newEmptyMVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "Control.Concurrent.MVar"
,"name": "modifyMVar_"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "readVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "putMVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "new_read_end"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$WChItem"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "val"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "read_end"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 136
,"start-col": 1
,"end-line": 140
,"end-col": 25}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "dupChan"}
,"refs": [{"package": "base"
,"module": "GHC.MVar"
,"name": "readMVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "writeVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "newMVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "hole"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$WChan"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "newReadVar"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 129
,"start-col": 1
,"end-line": 132
,"end-col": 37}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "readChan"}
,"refs": [{"package": "base"
,"module": "Control.Concurrent.MVar"
,"name": "modifyMVarMasked"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "readVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "readMVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "read_end"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "new_read_end"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "val"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 105
,"start-col": 1
,"end-line": 110
,"end-col": 31}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "getChanContents"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafeInterleaveIO"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "readChan"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "ch"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "getChanContents"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "x"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": ":"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "xs"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 157
,"start-col": 1
,"end-line": 162
,"end-col": 6}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "writeChan"}
,"refs": [{"package": "base"
,"module": "GHC.MVar"
,"name": "newEmptyMVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO"
,"name": "mask_"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "takeMVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "writeVar"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "putMVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "old_hole"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$WChItem"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "val"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "new_hole"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 86
,"start-col": 1
,"end-line": 91
,"end-col": 30}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "writeList2Chan"}
,"refs": [{"package": "base"
,"module": "Data.Foldable"
,"name": "sequence_"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "map"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "writeChan"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "ch"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "ls"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 166
,"start-col": 1
,"end-line": 166
,"end-col": 57}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "newChan"}
,"refs": [{"package": "base"
,"module": "GHC.MVar"
,"name": "newEmptyMVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "newMVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "hole"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$WChan"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "readVar"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "writeVar"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 73
,"start-col": 1
,"end-line": 77
,"end-col": 34}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$dEq"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "C:Eq"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$c=="}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "$c/="}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 56
,"start-col": 14
,"end-line": 56
,"end-col": 16}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "=="}
,"refs": [{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "a1"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "b1"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "&&"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "a2"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "b2"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 56
,"start-col": 14
,"end-line": 56
,"end-col": 16}}
,{"id": {"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "/="}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "not"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "a"}
,{"package": "base"
,"module": "Control.Concurrent.Chan"
,"name": "b"}]
,"src-span": {"file": "libraries/base/Control/Concurrent/Chan.hs"
,"start-line": 56
,"start-col": 14
,"end-line": 56
,"end-col": 16}}]
[{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "$trModule"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "Module"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TrNameS"}]}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "show_int"}
,"refs": [{"package": "base"
,"module": "GHC.Show"
,"name": "showSignedInt"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "i"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 253
,"start-col": 1
,"end-line": 253
,"end-col": 34}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "restartPollLoop"}
,"refs": [{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "release"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "forkOn"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "i"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "labelThread"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "t"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "++"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "show_int"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 256
,"start-col": 1
,"end-line": 260
,"end-col": 11}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "startIOManagerThread"}
,"refs": [{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "new"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "forkOn"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "i"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "c_setIOManagerControlFd"}
,{"package": "base"
,"module": "GHC.Real"
,"name": "fromIntegral"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Control"
,"name": "controlWriteFd"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "emControl"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "labelThread"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "t"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "++"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "show_int"}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "writeIOArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManagerArray"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "readIOArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "old"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "create"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "threadStatus"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "t"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "s"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "negate"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "cleanup"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "em"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 265
,"start-col": 1
,"end-line": 291
,"end-col": 36}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "timerManagerThreadVar"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafePerformIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "newMVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "sharedCAF"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "m"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getOrSetSystemTimerThreadIOManagerThreadStore"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 233
,"start-col": 1
,"end-line": 235
,"end-col": 61}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "timerManager"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafePerformIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "newIORef"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "sharedCAF"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "em"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getOrSetSystemTimerThreadEventManagerStore"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 223
,"start-col": 1
,"end-line": 225
,"end-col": 60}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "startTimerManagerThread"}
,"refs": [{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "modifyMVar_"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "timerManagerThreadVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.TimerManager"
,"name": "new"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "c_setTimerManagerControlFd"}
,{"package": "base"
,"module": "GHC.Real"
,"name": "fromIntegral"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Control"
,"name": "controlWriteFd"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.TimerManager"
,"name": "emControl"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "writeIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "timerManager"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "forkIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.TimerManager"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "labelThread"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "t"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "old"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "create"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "threadStatus"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "t"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "s"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mem"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "negate"}
,{"package": "base"
,"module": "GHC.Event.TimerManager"
,"name": "cleanup"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "em"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "st"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 294
,"start-col": 1
,"end-line": 321
,"end-col": 36}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getSystemTimerManager"}
,"refs": [{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "timerManager"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Base"
,"name": "fail"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 215
,"start-col": 1
,"end-line": 217
,"end-col": 13}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "ioManagerLock"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafePerformIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "newMVar"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "sharedCAF"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "m"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getOrSetSystemEventThreadIOManagerThreadStore"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 210
,"start-col": 1
,"end-line": 212
,"end-col": 61}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "numEnabledEventManagers"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafePerformIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "newIORef"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 199
,"start-col": 1
,"end-line": 200
,"end-col": 13}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManager"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafePerformIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "getNumCapabilities"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "newIOArray"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "numCaps"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "-"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "newIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManagerArray"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "sharedCAF"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "em"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getOrSetSystemEventThreadEventManagerStore"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 191
,"start-col": 1
,"end-line": 195
,"end-col": 60}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "startIOManagerThreads"}
,"refs": [{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "withMVar"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "ioManagerLock"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManager"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "boundsIOArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManagerArray"}
,{"package": "base"
,"module": "Data.Foldable"
,"name": "mapM_"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "startIOManagerThread"}
,{"package": "base"
,"module": "GHC.Enum"
,"name": "enumFromTo"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "high"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "writeIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "numEnabledEventManagers"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "+"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 245
,"start-col": 1
,"end-line": 250
,"end-col": 48}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "ensureIOManagerIsRunning"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "not"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threaded"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "startIOManagerThreads"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "startTimerManagerThread"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 238
,"start-col": 1
,"end-line": 242
,"end-col": 30}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "ioManagerCapabilitiesChanged"}
,"refs": [{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "withMVar"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "ioManagerLock"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "getNumCapabilities"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "numEnabledEventManagers"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "writeIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "new_n_caps"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManager"}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "boundsIOArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManagerArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "high"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "+"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": ">"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "old_n_caps"}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "newIOArray"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "-"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "Data.Foldable"
,"name": "forM_"}
,{"package": "base"
,"module": "GHC.Enum"
,"name": "enumFromTo"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "readIOArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "i"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "fail"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "<"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "numEnabled"}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "writeIOArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "new_eventManagerArray"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "tid"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "restartPollLoop"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "tid'"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "startIOManagerThread"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "when"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "i"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "tid"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 326
,"start-col": 1
,"end-line": 355
,"end-col": 64}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getSystemEventManager"}
,"refs": [{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "myThreadId"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "threadCapability"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "t"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManager"}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "readIOArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManagerArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "cap"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "fmap"}
,{"package": "base"
,"module": "Data.Tuple"
,"name": "snd"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mmgr"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 174
,"start-col": 1
,"end-line": 179
,"end-col": 25}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getSystemEventManager_"}
,"refs": [{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getSystemEventManager"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Base"
,"name": "fail"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 182
,"start-col": 1
,"end-line": 184
,"end-col": 13}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWaitSTM"}
,"refs": [{"package": "base"
,"module": "GHC.IO"
,"name": "mask_"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "newTVarIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getSystemEventManager_"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "registerFd"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "atomically"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "writeTVar"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "m"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "e"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "fd"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "evt"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "OneShot"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "readTVar"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mevt"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "retry"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "evt'"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "eventIs"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "evtClose"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "throwSTM"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "errnoToIOError"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "eBADF"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "waitAction"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "unregisterFd_"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "reg"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 129
,"start-col": 1
,"end-line": 141
,"end-col": 58}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWaitReadSTM"}
,"refs": [{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWaitSTM"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "evtRead"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 152
,"start-col": 1
,"end-line": 152
,"end-col": 42}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWaitWriteSTM"}
,"refs": [{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWaitSTM"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "evtWrite"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 164
,"start-col": 1
,"end-line": 164
,"end-col": 44}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "blockedOnBadFD"}
,"refs": [{"package": "base"
,"module": "GHC.Exception"
,"name": "toException"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "errnoToIOError"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "eBADF"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 126
,"start-col": 1
,"end-line": 126
,"end-col": 81}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWait"}
,"refs": [{"package": "base"
,"module": "GHC.IO"
,"name": "mask_"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "newEmptyMVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getSystemEventManager_"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "registerFd"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "putMVar"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "m"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "e"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "fd"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "evt"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "OneShot"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "takeMVar"}
,{"package": "base"
,"module": "GHC.IO"
,"name": "onException"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "unregisterFd_"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "reg"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "evt'"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "eventIs"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "evtClose"}
,{"package": "base"
,"module": "GHC.IO.Exception"
,"name": "ioError"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "errnoToIOError"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "eBADF"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 115
,"start-col": 1
,"end-line": 122
,"end-col": 19}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "closeFdWith"}
,"refs": [{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManager"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "boundsIOArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "eventManagerArray"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "flip"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "mapM"}
,{"package": "base"
,"module": "GHC.Enum"
,"name": "enumFromTo"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "low"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "high"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IOArray"
,"name": "readIOArray"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "i"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "fail"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.IO"
,"name": "mask_"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgrs"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "takeMVar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "callbackTableVar"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "fd"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "zipWithM"}
,{"package": "base"
,"module": "GHC.Event.Manager"
,"name": "closeFd_"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "table"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "tables"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "close"}
,{"package": "base"
,"module": "Control.Exception.Base"
,"name": "finally"}
,{"package": "base"
,"module": "Data.Foldable"
,"name": "sequence_"}
,{"package": "base"
,"module": "GHC.List"
,"name": "zipWith3"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "finish"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "cbApps"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "sequence"}
,{"package": "base"
,"module": "GHC.List"
,"name": "zipWith"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "f"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "xs"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "ys"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "putMVar"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "table"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "cbApp"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 100
,"start-col": 1
,"end-line": 112
,"end-col": 50}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWaitWrite"}
,"refs": [{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWait"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "evtWrite"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 89
,"start-col": 1
,"end-line": 89
,"end-col": 38}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWaitRead"}
,"refs": [{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadWait"}
,{"package": "base"
,"module": "GHC.Event.Internal"
,"name": "evtRead"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 79
,"start-col": 1
,"end-line": 79
,"end-col": 36}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "registerDelay"}
,"refs": [{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "atomically"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "newTVar"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "False"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getSystemTimerManager"}
,{"package": "base"
,"module": "GHC.Event.TimerManager"
,"name": "registerTimeout"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "usecs"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "."}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Conc.Sync"
,"name": "writeTVar"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "t"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "True"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 66
,"start-col": 1
,"end-line": 70
,"end-col": 11}}
,{"id": {"package": "base"
,"module": "GHC.Event.Thread"
,"name": "threadDelay"}
,"refs": [{"package": "base"
,"module": "GHC.IO"
,"name": "mask_"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "getSystemTimerManager"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "newEmptyMVar"}
,{"package": "base"
,"module": "GHC.Event.TimerManager"
,"name": "registerTimeout"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "mgr"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "usecs"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "putMVar"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "m"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "takeMVar"}
,{"package": "base"
,"module": "GHC.IO"
,"name": "onException"}
,{"package": "base"
,"module": "GHC.Event.TimerManager"
,"name": "unregisterTimeout"}
,{"package": "base"
,"module": "GHC.Event.Thread"
,"name": "reg"}]
,"src-span": {"file": "libraries/base/GHC/Event/Thread.hs"
,"start-line": 56
,"start-col": 1
,"end-line": 60
,"end-col": 56}}]
[{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "$trModule"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "Module"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TrNameS"}]}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "newIConv"}
,"refs": [{"package": "base"
,"module": "Foreign.C.String"
,"name": "withCAString"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "from"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "to"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "throwErrnoIfMinus1"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "hs_iconv_open"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "to_str"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "from_str"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "throwErrnoIfMinus1_"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "hs_iconv_close"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconvt"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "BufferCodec"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "fn"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "rec"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iclose"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "const"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 130
,"start-col": 1
,"end-line": 143
,"end-col": 18}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "char_shift"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "charSize"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 97
,"start-col": 1
,"end-line": 98
,"end-col": 31}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "haskellChar"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "charSize"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 92
,"start-col": 1
,"end-line": 93
,"end-col": 41}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "localeEncodingName"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafePerformIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "c_localeEncoding"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "Foreign.C.String"
,"name": "peekCAString"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "cstr"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 64
,"start-col": 1
,"end-line": 68
,"end-col": 21}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "c_DEBUG_DUMP"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "False"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 52
,"start-col": 1
,"end-line": 52
,"end-col": 21}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconv_trace"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "c_DEBUG_DUMP"}
,{"package": "base"
,"module": "System.Posix.Internals"
,"name": "puts"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "s"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 55
,"start-col": 1
,"end-line": 57
,"end-col": 28}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconvRecode"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconv_trace"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "++"}
,{"package": "base"
,"module": "GHC.Show"
,"name": "show"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "haskellChar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "summaryBuffer"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "input"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "output"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "withRawBuffer"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iraw"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "oraw"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "Foreign.Marshal.Utils"
,"name": "with"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "piraw"}
,{"package": "base"
,"module": "GHC.Ptr"
,"name": "plusPtr"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "ir"}
,{"package": "base"
,"module": "Data.Bits"
,"name": "shiftL"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iscale"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "poraw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "ow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "oscale"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.Real"
,"name": "fromIntegral"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iw"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "-"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "os"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "hs_iconv"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconv_t"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "p_inbuf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "p_inleft"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "p_outbuf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "p_outleft"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "Foreign.Storable"
,"name": "peek"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "new_outleft"}
,{"package": "base"
,"module": "Data.Bits"
,"name": "shiftR"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "new_outleft'"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "new_inleft"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "new_inleft'"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "res"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "new_input"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "new_output"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "/="}
,{"package": "base"
,"module": "GHC.Num"
,"name": "negate"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InputUnderflow"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "getErrno"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "errno"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "e"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "e2BIG"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "OutputUnderflow"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "eINVAL"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "eILSEQ"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InvalidSequence"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "errnoToIOError"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "Foreign.C.Error"
,"name": "throwErrno"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 153
,"start-col": 1
,"end-line": 198
,"end-col": 40}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconvDecode"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconvRecode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconv_t"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "ibuf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "obuf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "char_shift"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 146
,"start-col": 1
,"end-line": 146
,"end-col": 75}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconvEncode"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconvRecode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconv_t"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "ibuf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "char_shift"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "obuf"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 149
,"start-col": 1
,"end-line": 149
,"end-col": 75}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "mkIconvEncoding"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "TextEncoding"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "charset"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "newIConv"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "raw_charset"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "haskellChar"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "++"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "suffix"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "recoverDecode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "cfm"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconvDecode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "recoverEncode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconvEncode"}
,{"package": "base"
,"module": "GHC.Foreign"
,"name": "charIsRepresentable"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "enc"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "good"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.List"
,"name": "span"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "/="}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 110
,"start-col": 1
,"end-line": 124
,"end-col": 50}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "iconvEncoding"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.Iconv"
,"name": "mkIconvEncoding"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "ErrorOnCodingFailure"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/Iconv.hs"
,"start-line": 101
,"start-col": 1
,"end-line": 101
,"end-col": 53}}]
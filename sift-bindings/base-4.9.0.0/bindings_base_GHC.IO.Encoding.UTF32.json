[{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "$trModule"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "Module"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TrNameS"}]}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "validate"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "x1"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": ">="}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "&&"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "<"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "||"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": ">"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "<="}
,{"package": "base"
,"module": "GHC.Base"
,"name": "ord"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 333
,"start-col": 1
,"end-line": 334
,"end-col": 20}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ord4"}
,"refs": [{"package": "base"
,"module": "GHC.Real"
,"name": "fromIntegral"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "x"}
,{"package": "base"
,"module": "Data.Bits"
,"name": "shiftR"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "ord"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 323
,"start-col": 1
,"end-line": 328
,"end-col": 14}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "chr4"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "C#"}
,{"package": "ghc-prim"
,"module": "GHC.Prim"
,"name": "chr#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "z1#"}
,{"package": "ghc-prim"
,"module": "GHC.Prim"
,"name": "+#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "z2#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "z3#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "z4#"}
,{"package": "ghc-prim"
,"module": "GHC.Prim"
,"name": "word2Int#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "x4#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "y4#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "x3#"}
,{"package": "ghc-prim"
,"module": "GHC.Prim"
,"name": "uncheckedIShiftL#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "y3#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "x2#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "y2#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "x1#"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "y1#"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 309
,"start-col": 1
,"end-line": 319
,"end-col": 17}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le_encode"}
,"refs": [{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "why"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "input"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "output"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": ">="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "done"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InputUnderflow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "os"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "-"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "<"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "OutputUnderflow"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "readCharBuf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iraw"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "isSurrogate"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InvalidSequence"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ord4"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "writeWord8Buf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "oraw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c3"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "+"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c2"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c1"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c0"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir'"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir0"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow0"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 285
,"start-col": 1
,"end-line": 306
,"end-col": 17}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_encode"}
,"refs": [{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "why"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "input"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "output"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": ">="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "done"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InputUnderflow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "os"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "-"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "<"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "OutputUnderflow"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "readCharBuf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iraw"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "isSurrogate"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InvalidSequence"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ord4"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "writeWord8Buf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "oraw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c0"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "+"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c1"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c2"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c3"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir'"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir0"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow0"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 261
,"start-col": 1
,"end-line": 282
,"end-col": 17}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le_decode"}
,"refs": [{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "why"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "input"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "output"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": ">="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "os"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "done"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "OutputUnderflow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "-"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "<"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InputUnderflow"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "readWord8Buf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iraw"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Num"
,"name": "+"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "chr4"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c3"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c2"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c1"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c0"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "not"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "validate"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "x1"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "invalid"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "writeCharBuf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "oraw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow'"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InvalidSequence"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir0"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow0"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 233
,"start-col": 1
,"end-line": 258
,"end-col": 17}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_decode"}
,"refs": [{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "why"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "input"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "output"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": ">="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "os"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "done"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "OutputUnderflow"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "-"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "<"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InputUnderflow"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "readWord8Buf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iraw"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Num"
,"name": "+"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "chr4"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c0"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c1"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c2"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c3"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "not"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "validate"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "x1"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "invalid"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "writeCharBuf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "oraw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow'"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InvalidSequence"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "loop"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir0"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow0"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 205
,"start-col": 1
,"end-line": 230
,"end-col": 17}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le_EF"}
,"refs": [{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "BufferCodec"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le_encode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "recoverEncode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "cfm"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "const"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 194
,"start-col": 1
,"end-line": 201
,"end-col": 13}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le_DF"}
,"refs": [{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "BufferCodec"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le_decode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "recoverDecode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "cfm"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "const"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 184
,"start-col": 1
,"end-line": 191
,"end-col": 13}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "mkUTF32le"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "TextEncoding"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le_DF"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "cfm"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le_EF"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 179
,"start-col": 1
,"end-line": 181
,"end-col": 64}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "mkUTF32le"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "ErrorOnCodingFailure"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 175
,"start-col": 1
,"end-line": 175
,"end-col": 41}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_EF"}
,"refs": [{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "BufferCodec"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_encode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "recoverEncode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "cfm"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "const"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 164
,"start-col": 1
,"end-line": 171
,"end-col": 13}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_DF"}
,"refs": [{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "BufferCodec"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_decode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "recoverDecode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "cfm"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "const"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 154
,"start-col": 1
,"end-line": 161
,"end-col": 13}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "mkUTF32be"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "TextEncoding"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_DF"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "cfm"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_EF"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 149
,"start-col": 1
,"end-line": 151
,"end-col": 64}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "mkUTF32be"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "ErrorOnCodingFailure"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 145
,"start-col": 1
,"end-line": 145
,"end-col": 41}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_native_encode"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_encode"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 139
,"start-col": 1
,"end-line": 139
,"end-col": 37}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_native_decode"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_decode"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 136
,"start-col": 1
,"end-line": 136
,"end-col": 37}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom3"}
,"refs": [{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 132
,"start-col": 1
,"end-line": 132
,"end-col": 12}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom2"}
,"refs": [{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 131
,"start-col": 1
,"end-line": 131
,"end-col": 12}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom1"}
,"refs": [{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 130
,"start-col": 1
,"end-line": 130
,"end-col": 9}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom0"}
,"refs": [{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 129
,"start-col": 1
,"end-line": 129
,"end-col": 9}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_decode"}
,"refs": [{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "seen_bom"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "mb"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "decode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "input"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "output"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iw"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "-"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ir"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "<"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "InputUnderflow"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "readWord8Buf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "iraw"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "+"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c0"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "=="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom0"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "&&"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c1"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom1"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c2"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom2"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "c3"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom3"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "writeIORef"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32be_decode"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32le_decode"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_native_decode"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 103
,"start-col": 1
,"end-line": 125
,"end-col": 48}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_encode"}
,"refs": [{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "done_bom"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "b"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_native_encode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "input"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "output"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "os"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "-"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "ow"}
,{"package": "ghc-prim"
,"module": "GHC.Classes"
,"name": "<"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "OutputUnderflow"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "writeIORef"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "True"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.IO.Buffer"
,"name": "writeWord8Buf"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "oraw"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom0"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "+"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom1"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom2"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "bom3"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 87
,"start-col": 1
,"end-line": 100
,"end-col": 68}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_EF"}
,"refs": [{"package": "base"
,"module": "GHC.IORef"
,"name": "newIORef"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "False"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "BufferCodec"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_encode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "done_bom"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "recoverEncode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "cfm"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "writeIORef"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 76
,"start-col": 1
,"end-line": 84
,"end-col": 13}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_DF"}
,"refs": [{"package": "base"
,"module": "GHC.IORef"
,"name": "newIORef"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "BufferCodec"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_decode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "seen_bom"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "recoverDecode"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "cfm"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "readIORef"}
,{"package": "base"
,"module": "GHC.IORef"
,"name": "writeIORef"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 65
,"start-col": 1
,"end-line": 73
,"end-col": 13}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "mkUTF32"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.Types"
,"name": "TextEncoding"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_DF"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "cfm"}
,{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32_EF"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 60
,"start-col": 1
,"end-line": 62
,"end-col": 60}}
,{"id": {"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "utf32"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Encoding.UTF32"
,"name": "mkUTF32"}
,{"package": "base"
,"module": "GHC.IO.Encoding.Failure"
,"name": "ErrorOnCodingFailure"}]
,"src-span": {"file": "libraries/base/GHC/IO/Encoding/UTF32.hs"
,"start-line": 56
,"start-col": 1
,"end-line": 56
,"end-col": 37}}]
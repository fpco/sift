[{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "$trModule"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "Module"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "TrNameS"}]}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "dEFAULT_OPEN_IN_BINARY_MODE"}
,"refs": [{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "False"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 291
,"start-col": 1
,"end-line": 291
,"end-col": 36}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "mkHandleFromFD"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "set_non_blocking"}
,{"package": "base"
,"module": "GHC.IO.FD"
,"name": "setNonBlockingMode"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd0"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "True"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "Data.Maybe"
,"name": "isJust"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "mb_codec"}
,{"package": "base"
,"module": "GHC.IO.Handle.Types"
,"name": "nativeNewlineMode"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "otherwise"}
,{"package": "base"
,"module": "GHC.IO.Handle.Types"
,"name": "noNewlineTranslation"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd_type"}
,{"package": "base"
,"module": "GHC.IO.Exception"
,"name": "ioException"}
,{"package": "base"
,"module": "GHC.IO.Exception"
,"name": "IOError"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.IO.Exception"
,"name": "InappropriateType"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "iomode"}
,{"package": "base"
,"module": "GHC.IO.Handle.Internals"
,"name": "mkDuplexHandle"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "filepath"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "nl"}
,{"package": "base"
,"module": "GHC.IO.Handle.Internals"
,"name": "mkFileHandle"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 213
,"start-col": 1
,"end-line": 241
,"end-col": 55}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fdToHandle'"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "mb_type"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "other"}
,{"package": "base"
,"module": "GHC.Num"
,"name": "fromInteger"}
,{"package": "base"
,"module": "GHC.IO.FD"
,"name": "mkFD"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fdint"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "iomode"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "mb_stat"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "is_socket"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "binary"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "fmap"}
,{"package": "base"
,"module": "GHC.IO.Encoding"
,"name": "getLocaleEncoding"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "mkHandleFromFD"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd_type"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "filepath"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "enc"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 251
,"start-col": 1
,"end-line": 262
,"end-col": 58}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fdToHandle"}
,"refs": [{"package": "base"
,"module": "System.Posix.Internals"
,"name": "fdGetMode"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fdint"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.FD"
,"name": "mkFD"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "iomode"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "False"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "++"}
,{"package": "base"
,"module": "GHC.Show"
,"name": "show"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "mkHandleFromFD"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd_type"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd_str"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 272
,"start-col": 1
,"end-line": 284
,"end-col": 26}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "openFile'"}
,"refs": [{"package": "base"
,"module": "GHC.IO.FD"
,"name": "openFile"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "filepath"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "iomode"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "non_blocking"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "binary"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "fmap"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.IO.Encoding"
,"name": "getLocaleEncoding"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "mkHandleFromFD"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fd_type"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "False"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "mb_codec"}
,{"package": "base"
,"module": "GHC.IO"
,"name": "onException"}
,{"package": "base"
,"module": "GHC.IO.Device"
,"name": "close"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 183
,"start-col": 1
,"end-line": 193
,"end-col": 44}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "addFilePathToIOError"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "ioe"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fun"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fp"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 120
,"start-col": 1
,"end-line": 121
,"end-col": 54}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "openFile"}
,"refs": [{"package": "base"
,"module": "GHC.IO"
,"name": "catchException"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "openFile'"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fp"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "im"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "dEFAULT_OPEN_IN_BINARY_MODE"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "True"}
,{"package": "base"
,"module": "GHC.IO.Exception"
,"name": "ioError"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "addFilePathToIOError"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "e"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 150
,"start-col": 1
,"end-line": 153
,"end-col": 59}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "openFileBlocking"}
,"refs": [{"package": "base"
,"module": "GHC.IO"
,"name": "catchException"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "openFile'"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fp"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "im"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "dEFAULT_OPEN_IN_BINARY_MODE"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "False"}
,{"package": "base"
,"module": "GHC.IO.Exception"
,"name": "ioError"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "addFilePathToIOError"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "e"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 162
,"start-col": 1
,"end-line": 165
,"end-col": 59}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "openBinaryFile"}
,"refs": [{"package": "base"
,"module": "GHC.IO"
,"name": "catchException"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "openFile'"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fp"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "m"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "True"}
,{"package": "base"
,"module": "GHC.IO.Exception"
,"name": "ioError"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "addFilePathToIOError"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "e"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 177
,"start-col": 1
,"end-line": 180
,"end-col": 65}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "setBinaryMode"}
,"refs": [{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 99
,"start-col": 1
,"end-line": 99
,"end-col": 28}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "stdHandleFinalizer"}
,"refs": [{"package": "base"
,"module": "GHC.MVar"
,"name": "takeMVar"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "m"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Handle.Internals"
,"name": "flushWriteBuffer"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "h_"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.IO.Handle.Types"
,"name": "haType"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "return"}
,{"package": "ghc-prim"
,"module": "GHC.Tuple"
,"name": "()"}
,{"package": "base"
,"module": "GHC.IO.Handle.Internals"
,"name": "closeTextCodecs"}
,{"package": "base"
,"module": "GHC.MVar"
,"name": "putMVar"}
,{"package": "base"
,"module": "GHC.IO.Handle.Internals"
,"name": "ioe_finalizedHandle"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "fp"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 84
,"start-col": 1
,"end-line": 90
,"end-col": 37}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "stderr"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafePerformIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "setBinaryMode"}
,{"package": "base"
,"module": "GHC.IO.FD"
,"name": "stderr"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.IO.Encoding"
,"name": "getLocaleEncoding"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Handle.Internals"
,"name": "mkHandle"}
,{"package": "base"
,"module": "GHC.IO.Handle.Types"
,"name": "WriteHandle"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "False"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "enc"}
,{"package": "base"
,"module": "GHC.IO.Handle.Types"
,"name": "nativeNewlineMode"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "stdHandleFinalizer"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 74
,"start-col": 1
,"end-line": 81
,"end-col": 50}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "stdout"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafePerformIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "setBinaryMode"}
,{"package": "base"
,"module": "GHC.IO.FD"
,"name": "stdout"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.IO.Encoding"
,"name": "getLocaleEncoding"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Handle.Internals"
,"name": "mkHandle"}
,{"package": "base"
,"module": "GHC.IO.Handle.Types"
,"name": "WriteHandle"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "True"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "enc"}
,{"package": "base"
,"module": "GHC.IO.Handle.Types"
,"name": "nativeNewlineMode"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "stdHandleFinalizer"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 63
,"start-col": 1
,"end-line": 69
,"end-col": 50}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "stdin"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Unsafe"
,"name": "unsafePerformIO"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "$"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "setBinaryMode"}
,{"package": "base"
,"module": "GHC.IO.FD"
,"name": "stdin"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>"}
,{"package": "base"
,"module": "GHC.IO.Encoding"
,"name": "getLocaleEncoding"}
,{"package": "base"
,"module": "GHC.Base"
,"name": ">>="}
,{"package": "base"
,"module": "GHC.IO.Handle.Internals"
,"name": "mkHandle"}
,{"package": "base"
,"module": "GHC.IO.Handle.Types"
,"name": "ReadHandle"}
,{"package": "ghc-prim"
,"module": "GHC.Types"
,"name": "True"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Just"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "enc"}
,{"package": "base"
,"module": "GHC.IO.Handle.Types"
,"name": "nativeNewlineMode"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "stdHandleFinalizer"}
,{"package": "base"
,"module": "GHC.Base"
,"name": "Nothing"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 52
,"start-col": 1
,"end-line": 58
,"end-col": 50}}
,{"id": {"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "isEOF"}
,"refs": [{"package": "base"
,"module": "GHC.IO.Handle"
,"name": "hIsEOF"}
,{"package": "base"
,"module": "GHC.IO.Handle.FD"
,"name": "stdin"}]
,"src-span": {"file": "libraries/base/GHC/IO/Handle/FD.hs"
,"start-line": 114
,"start-col": 1
,"end-line": 114
,"end-col": 21}}]